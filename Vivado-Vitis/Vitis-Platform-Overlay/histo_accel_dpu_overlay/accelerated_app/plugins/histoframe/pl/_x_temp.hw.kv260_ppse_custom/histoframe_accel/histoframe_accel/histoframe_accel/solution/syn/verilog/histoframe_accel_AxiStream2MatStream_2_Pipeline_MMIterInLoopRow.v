// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module histoframe_accel_AxiStream2MatStream_2_Pipeline_MMIterInLoopRow (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_num_data_valid,
        ldata1_fifo_cap,
        ldata1_empty_n,
        ldata1_read,
        in_mat_data1_din,
        in_mat_data1_num_data_valid,
        in_mat_data1_fifo_cap,
        in_mat_data1_full_n,
        in_mat_data1_write,
        bound,
        sext_ln1033,
        cols_bound_per_npc_load,
        sub,
        last_blk_width_load,
        sub5,
        add_ln1033
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] ldata1_dout;
input  [1:0] ldata1_num_data_valid;
input  [1:0] ldata1_fifo_cap;
input   ldata1_empty_n;
output   ldata1_read;
output  [7:0] in_mat_data1_din;
input  [1:0] in_mat_data1_num_data_valid;
input  [1:0] in_mat_data1_fifo_cap;
input   in_mat_data1_full_n;
output   in_mat_data1_write;
input  [31:0] bound;
input  [4:0] sext_ln1033;
input  [31:0] cols_bound_per_npc_load;
input  [31:0] sub;
input  [3:0] last_blk_width_load;
input  [7:0] sub5;
input  [7:0] add_ln1033;

reg ap_idle;
reg ldata1_read;
reg in_mat_data1_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1013_reg_770;
reg   [0:0] icmp_ln1013_reg_770_pp0_iter2_reg;
reg   [0:0] icmp_ln1024_reg_791;
reg    ap_predicate_op108_read_state4;
reg    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] icmp_ln1044_reg_787;
reg   [0:0] icmp_ln1044_reg_787_pp0_iter3_reg;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1013_fu_204_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ldata1_blk_n;
wire    ap_block_pp0_stage0;
reg    in_mat_data1_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1013_reg_770_pp0_iter3_reg;
wire   [0:0] bLast_width_fu_215_p2;
reg   [0:0] bLast_width_reg_774;
reg   [0:0] bLast_width_reg_774_pp0_iter2_reg;
reg   [0:0] bLast_width_reg_774_pp0_iter3_reg;
wire   [3:0] xf_bits_per_clock_fu_220_p3;
reg   [3:0] xf_bits_per_clock_reg_781;
wire   [0:0] icmp_ln1044_fu_227_p2;
reg   [0:0] icmp_ln1044_reg_787_pp0_iter2_reg;
wire   [0:0] icmp_ln1024_fu_275_p2;
reg   [0:0] icmp_ln1024_reg_791_pp0_iter3_reg;
wire   [0:0] icmp_ln628_fu_303_p2;
reg   [0:0] icmp_ln628_reg_795;
wire   [6:0] trunc_ln628_fu_309_p1;
reg   [6:0] trunc_ln628_reg_802;
wire   [6:0] trunc_ln628_1_fu_313_p1;
reg   [6:0] trunc_ln628_1_reg_810;
wire   [0:0] icmp_ln1025_fu_328_p2;
reg   [0:0] icmp_ln1025_reg_816;
wire   [6:0] sub_ln628_fu_342_p2;
reg   [6:0] sub_ln628_reg_821;
wire   [2:0] sub_ln368_fu_348_p2;
reg   [2:0] sub_ln368_reg_827;
wire   [6:0] sub_ln628_1_fu_372_p2;
reg   [6:0] sub_ln628_1_reg_832;
wire   [0:0] icmp_ln368_fu_378_p2;
reg   [0:0] icmp_ln368_reg_837;
wire   [2:0] trunc_ln368_fu_384_p1;
reg   [2:0] trunc_ln368_reg_843;
wire   [7:0] and_ln368_fu_434_p2;
reg   [7:0] and_ln368_reg_849;
wire   [7:0] localbuffer_V_6_fu_529_p1;
wire   [7:0] p_Result_3_fu_662_p2;
reg   [7:0] p_Result_3_reg_860;
reg    ap_condition_exit_pp0_iter2_stage0;
reg   [7:0] ap_phi_mux_localbuffer_V_8_phi_fu_168_p4;
reg   [7:0] ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_165;
wire   [7:0] ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_165;
reg   [7:0] ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_165;
reg   [7:0] ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_165;
reg   [7:0] ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_165;
reg   [31:0] rem_fu_94;
wire   [31:0] rem_3_fu_317_p2;
wire   [31:0] rem_2_fu_440_p2;
wire    ap_loop_init;
reg   [30:0] i_fu_98;
wire   [30:0] add_ln1013_fu_209_p2;
reg   [31:0] j_fu_102;
wire   [31:0] j_5_fu_238_p3;
reg   [127:0] p_Val2_s_fu_106;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] zext_ln1013_fu_200_p1;
wire   [31:0] add_ln1045_fu_232_p2;
wire   [7:0] ptr_width_minus_fu_265_p3;
wire   [31:0] zext_ln1019_fu_259_p1;
wire   [7:0] select_ln1033_fu_281_p3;
wire   [31:0] zext_ln1033_fu_287_p1;
wire   [31:0] sub_ln1033_1_fu_297_p2;
wire   [31:0] sub_ln1033_fu_291_p2;
wire   [6:0] trunc_ln1026_fu_334_p1;
wire   [2:0] trunc_ln1026_1_fu_338_p1;
wire   [4:0] zext_ln1019_1_fu_262_p1;
wire  signed [4:0] add_ln1030_fu_354_p2;
wire  signed [6:0] sext_ln1030_1_fu_364_p1;
wire   [6:0] trunc_ln1030_fu_368_p1;
wire  signed [31:0] sext_ln1030_fu_360_p1;
wire   [2:0] trunc_ln368_1_fu_388_p1;
wire   [2:0] select_ln368_fu_392_p3;
wire   [2:0] select_ln368_1_fu_400_p3;
wire   [2:0] xor_ln368_1_fu_408_p2;
wire   [7:0] zext_ln368_2_fu_414_p1;
wire   [7:0] zext_ln368_3_fu_418_p1;
wire   [7:0] shl_ln368_1_fu_422_p2;
wire   [7:0] lshr_ln368_1_fu_428_p2;
wire   [31:0] zext_ln1020_fu_271_p1;
wire   [6:0] sub_ln628_2_fu_464_p2;
wire   [6:0] sub_ln628_3_fu_473_p2;
reg   [127:0] tmp_1_fu_454_p4;
wire   [6:0] xor_ln628_1_fu_468_p2;
wire   [6:0] select_ln628_fu_477_p3;
wire   [6:0] select_ln628_2_fu_491_p3;
wire   [6:0] xor_ln628_2_fu_497_p2;
wire   [127:0] select_ln628_1_fu_484_p3;
wire   [127:0] zext_ln628_3_fu_503_p1;
wire   [127:0] zext_ln628_4_fu_507_p1;
wire   [127:0] lshr_ln628_3_fu_511_p2;
wire   [127:0] lshr_ln628_4_fu_517_p2;
wire   [127:0] p_Result_4_fu_523_p2;
wire   [127:0] zext_ln628_fu_533_p1;
wire   [127:0] zext_ln628_1_fu_536_p1;
wire   [127:0] lshr_ln628_fu_539_p2;
wire   [127:0] lshr_ln628_1_fu_545_p2;
wire   [127:0] p_Result_s_fu_551_p2;
wire   [7:0] zext_ln368_fu_561_p1;
wire   [7:0] tmp_2_fu_557_p1;
wire   [7:0] lshr_ln368_fu_564_p2;
wire   [7:0] p_Result_1_fu_570_p2;
wire   [6:0] xor_ln628_fu_583_p2;
wire   [127:0] zext_ln628_2_fu_588_p1;
wire   [127:0] lshr_ln628_2_fu_592_p2;
wire   [127:0] p_Result_2_fu_598_p2;
wire   [2:0] xor_ln368_fu_608_p2;
wire   [2:0] select_ln368_2_fu_613_p3;
wire   [7:0] tmp_3_fu_604_p1;
wire   [7:0] zext_ln368_1_fu_619_p1;
wire   [7:0] shl_ln368_fu_623_p2;
reg   [7:0] tmp_fu_629_p4;
wire   [7:0] localbuffer_V_fu_576_p3;
wire   [7:0] xor_ln368_2_fu_646_p2;
wire   [7:0] select_ln368_3_fu_639_p3;
wire   [7:0] and_ln368_1_fu_651_p2;
wire   [7:0] and_ln368_2_fu_657_p2;
wire   [2:0] trunc_ln628_2_fu_673_p1;
wire   [2:0] xor_ln628_3_fu_676_p2;
wire   [7:0] zext_ln628_5_fu_682_p1;
wire   [7:0] lshr_ln628_5_fu_686_p2;
wire   [7:0] select_ln1018_fu_692_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_637;
reg    ap_condition_641;
reg    ap_condition_644;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

histoframe_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1024_reg_791 == 1'd0) & (icmp_ln1013_reg_770_pp0_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_165 <= localbuffer_V_6_fu_529_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_165 <= ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_165;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_98 <= 31'd0;
        end else if (((icmp_ln1013_fu_204_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_98 <= add_ln1013_fu_209_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_102 <= 32'd0;
        end else if (((icmp_ln1013_fu_204_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_102 <= j_5_fu_238_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_s_fu_106 <= 128'd0;
        end else if ((1'b1 == ap_condition_637)) begin
            p_Val2_s_fu_106 <= ldata1_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            rem_fu_94 <= 32'd0;
        end else if ((1'b1 == ap_condition_644)) begin
            rem_fu_94 <= rem_2_fu_440_p2;
        end else if ((1'b1 == ap_condition_641)) begin
            rem_fu_94 <= rem_3_fu_317_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1013_reg_770 == 1'd1) & (icmp_ln1024_fu_275_p2 == 1'd1))) begin
        and_ln368_reg_849 <= and_ln368_fu_434_p2;
        icmp_ln1025_reg_816 <= icmp_ln1025_fu_328_p2;
        icmp_ln368_reg_837 <= icmp_ln368_fu_378_p2;
        sub_ln368_reg_827 <= sub_ln368_fu_348_p2;
        sub_ln628_1_reg_832 <= sub_ln628_1_fu_372_p2;
        sub_ln628_reg_821 <= sub_ln628_fu_342_p2;
        trunc_ln368_reg_843 <= trunc_ln368_fu_384_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln1013_reg_770 <= icmp_ln1013_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        bLast_width_reg_774_pp0_iter2_reg <= bLast_width_reg_774;
        bLast_width_reg_774_pp0_iter3_reg <= bLast_width_reg_774_pp0_iter2_reg;
        icmp_ln1013_reg_770_pp0_iter2_reg <= icmp_ln1013_reg_770;
        icmp_ln1013_reg_770_pp0_iter3_reg <= icmp_ln1013_reg_770_pp0_iter2_reg;
        icmp_ln1024_reg_791_pp0_iter3_reg <= icmp_ln1024_reg_791;
        icmp_ln1044_reg_787_pp0_iter2_reg <= icmp_ln1044_reg_787;
        icmp_ln1044_reg_787_pp0_iter3_reg <= icmp_ln1044_reg_787_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_165 <= ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_165;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_165 <= ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_165;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_165 <= ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_165;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1013_fu_204_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bLast_width_reg_774 <= bLast_width_fu_215_p2;
        icmp_ln1044_reg_787 <= icmp_ln1044_fu_227_p2;
        xf_bits_per_clock_reg_781 <= xf_bits_per_clock_fu_220_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1013_reg_770 == 1'd1))) begin
        icmp_ln1024_reg_791 <= icmp_ln1024_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1013_reg_770 == 1'd1) & (icmp_ln1024_fu_275_p2 == 1'd0))) begin
        icmp_ln628_reg_795 <= icmp_ln628_fu_303_p2;
        trunc_ln628_1_reg_810 <= trunc_ln628_1_fu_313_p1;
        trunc_ln628_reg_802 <= trunc_ln628_fu_309_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1024_reg_791 == 1'd1) & (icmp_ln1013_reg_770_pp0_iter2_reg == 1'd1))) begin
        p_Result_3_reg_860 <= p_Result_3_fu_662_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1013_fu_204_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1013_reg_770 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1024_reg_791_pp0_iter3_reg == 1'd1) & (icmp_ln1013_reg_770_pp0_iter3_reg == 1'd1))) begin
        ap_phi_mux_localbuffer_V_8_phi_fu_168_p4 = p_Result_3_reg_860;
    end else begin
        ap_phi_mux_localbuffer_V_8_phi_fu_168_p4 = ap_phi_reg_pp0_iter4_localbuffer_V_8_reg_165;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1044_reg_787_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_mat_data1_blk_n = in_mat_data1_full_n;
    end else begin
        in_mat_data1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1044_reg_787_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_mat_data1_write = 1'b1;
    end else begin
        in_mat_data1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op108_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op108_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1013_fu_209_p2 = (i_fu_98 + 31'd1);

assign add_ln1030_fu_354_p2 = ($signed(zext_ln1019_1_fu_262_p1) + $signed(5'd31));

assign add_ln1045_fu_232_p2 = (j_fu_102 + 32'd1);

assign and_ln368_1_fu_651_p2 = (xor_ln368_2_fu_646_p2 & localbuffer_V_fu_576_p3);

assign and_ln368_2_fu_657_p2 = (select_ln368_3_fu_639_p3 & and_ln368_reg_849);

assign and_ln368_fu_434_p2 = (shl_ln368_1_fu_422_p2 & lshr_ln368_1_fu_428_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1044_reg_787_pp0_iter3_reg == 1'd1) & (in_mat_data1_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op108_read_state4 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1044_reg_787_pp0_iter3_reg == 1'd1) & (in_mat_data1_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op108_read_state4 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1044_reg_787_pp0_iter3_reg == 1'd1) & (in_mat_data1_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op108_read_state4 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((ap_predicate_op108_read_state4 == 1'b1) & (ldata1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((icmp_ln1044_reg_787_pp0_iter3_reg == 1'd1) & (in_mat_data1_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_637 = ((icmp_ln1024_reg_791 == 1'd1) & (icmp_ln1013_reg_770_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_641 = ((icmp_ln1013_reg_770 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1024_fu_275_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_644 = ((icmp_ln1013_reg_770 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1024_fu_275_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_165 = 'bx;

always @ (*) begin
    ap_predicate_op108_read_state4 = ((icmp_ln1024_reg_791 == 1'd1) & (icmp_ln1013_reg_770_pp0_iter2_reg == 1'd1));
end

assign bLast_width_fu_215_p2 = ((j_fu_102 == sub) ? 1'b1 : 1'b0);

assign icmp_ln1013_fu_204_p2 = (($signed(zext_ln1013_fu_200_p1) < $signed(bound)) ? 1'b1 : 1'b0);

assign icmp_ln1024_fu_275_p2 = (($signed(zext_ln1019_fu_259_p1) > $signed(rem_fu_94)) ? 1'b1 : 1'b0);

assign icmp_ln1025_fu_328_p2 = ((rem_fu_94 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1044_fu_227_p2 = (($signed(j_fu_102) < $signed(cols_bound_per_npc_load)) ? 1'b1 : 1'b0);

assign icmp_ln368_fu_378_p2 = ((rem_fu_94 > sext_ln1030_fu_360_p1) ? 1'b1 : 1'b0);

assign icmp_ln628_fu_303_p2 = ((sub_ln1033_1_fu_297_p2 > sub_ln1033_fu_291_p2) ? 1'b1 : 1'b0);

assign in_mat_data1_din = (select_ln1018_fu_692_p3 & ap_phi_mux_localbuffer_V_8_phi_fu_168_p4);

assign j_5_fu_238_p3 = ((bLast_width_fu_215_p2[0:0] == 1'b1) ? 32'd0 : add_ln1045_fu_232_p2);

assign localbuffer_V_6_fu_529_p1 = p_Result_4_fu_523_p2[7:0];

assign localbuffer_V_fu_576_p3 = ((icmp_ln1025_reg_816[0:0] == 1'b1) ? 8'd0 : p_Result_1_fu_570_p2);

assign lshr_ln368_1_fu_428_p2 = 8'd255 >> zext_ln368_3_fu_418_p1;

assign lshr_ln368_fu_564_p2 = 8'd255 >> zext_ln368_fu_561_p1;

assign lshr_ln628_1_fu_545_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln628_1_fu_536_p1;

assign lshr_ln628_2_fu_592_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln628_2_fu_588_p1;

assign lshr_ln628_3_fu_511_p2 = select_ln628_1_fu_484_p3 >> zext_ln628_3_fu_503_p1;

assign lshr_ln628_4_fu_517_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln628_4_fu_507_p1;

assign lshr_ln628_5_fu_686_p2 = 8'd255 >> zext_ln628_5_fu_682_p1;

assign lshr_ln628_fu_539_p2 = p_Val2_s_fu_106 >> zext_ln628_fu_533_p1;

assign p_Result_1_fu_570_p2 = (tmp_2_fu_557_p1 & lshr_ln368_fu_564_p2);

assign p_Result_2_fu_598_p2 = (lshr_ln628_2_fu_592_p2 & ldata1_dout);

assign p_Result_3_fu_662_p2 = (and_ln368_2_fu_657_p2 | and_ln368_1_fu_651_p2);

assign p_Result_4_fu_523_p2 = (lshr_ln628_4_fu_517_p2 & lshr_ln628_3_fu_511_p2);

assign p_Result_s_fu_551_p2 = (lshr_ln628_fu_539_p2 & lshr_ln628_1_fu_545_p2);

assign ptr_width_minus_fu_265_p3 = ((bLast_width_reg_774[0:0] == 1'b1) ? sub5 : 8'd120);

assign rem_2_fu_440_p2 = (rem_fu_94 + zext_ln1020_fu_271_p1);

assign rem_3_fu_317_p2 = (rem_fu_94 - zext_ln1019_fu_259_p1);

assign select_ln1018_fu_692_p3 = ((bLast_width_reg_774_pp0_iter3_reg[0:0] == 1'b1) ? lshr_ln628_5_fu_686_p2 : 8'd255);

assign select_ln1033_fu_281_p3 = ((bLast_width_reg_774[0:0] == 1'b1) ? add_ln1033 : 8'd135);

assign select_ln368_1_fu_400_p3 = ((icmp_ln368_fu_378_p2[0:0] == 1'b1) ? trunc_ln368_1_fu_388_p1 : trunc_ln368_fu_384_p1);

assign select_ln368_2_fu_613_p3 = ((icmp_ln368_reg_837[0:0] == 1'b1) ? xor_ln368_fu_608_p2 : trunc_ln368_reg_843);

assign select_ln368_3_fu_639_p3 = ((icmp_ln368_reg_837[0:0] == 1'b1) ? tmp_fu_629_p4 : shl_ln368_fu_623_p2);

assign select_ln368_fu_392_p3 = ((icmp_ln368_fu_378_p2[0:0] == 1'b1) ? trunc_ln368_fu_384_p1 : trunc_ln368_1_fu_388_p1);

assign select_ln628_1_fu_484_p3 = ((icmp_ln628_reg_795[0:0] == 1'b1) ? tmp_1_fu_454_p4 : p_Val2_s_fu_106);

assign select_ln628_2_fu_491_p3 = ((icmp_ln628_reg_795[0:0] == 1'b1) ? xor_ln628_1_fu_468_p2 : trunc_ln628_reg_802);

assign select_ln628_fu_477_p3 = ((icmp_ln628_reg_795[0:0] == 1'b1) ? sub_ln628_2_fu_464_p2 : sub_ln628_3_fu_473_p2);

assign sext_ln1030_1_fu_364_p1 = add_ln1030_fu_354_p2;

assign sext_ln1030_fu_360_p1 = add_ln1030_fu_354_p2;

assign shl_ln368_1_fu_422_p2 = 8'd255 << zext_ln368_2_fu_414_p1;

assign shl_ln368_fu_623_p2 = tmp_3_fu_604_p1 << zext_ln368_1_fu_619_p1;

assign sub_ln1033_1_fu_297_p2 = (32'd128 - rem_fu_94);

assign sub_ln1033_fu_291_p2 = (zext_ln1033_fu_287_p1 - rem_fu_94);

assign sub_ln368_fu_348_p2 = (3'd0 - trunc_ln1026_1_fu_338_p1);

assign sub_ln628_1_fu_372_p2 = ($signed(sext_ln1030_1_fu_364_p1) - $signed(trunc_ln1030_fu_368_p1));

assign sub_ln628_2_fu_464_p2 = (trunc_ln628_reg_802 - trunc_ln628_1_reg_810);

assign sub_ln628_3_fu_473_p2 = (trunc_ln628_1_reg_810 - trunc_ln628_reg_802);

assign sub_ln628_fu_342_p2 = (7'd0 - trunc_ln1026_fu_334_p1);

integer ap_tvar_int_0;

always @ (p_Val2_s_fu_106) begin
    for (ap_tvar_int_0 = 128 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 127 - 0) begin
            tmp_1_fu_454_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_1_fu_454_p4[ap_tvar_int_0] = p_Val2_s_fu_106[127 - ap_tvar_int_0];
        end
    end
end

assign tmp_2_fu_557_p1 = p_Result_s_fu_551_p2[7:0];

assign tmp_3_fu_604_p1 = p_Result_2_fu_598_p2[7:0];

integer ap_tvar_int_1;

always @ (shl_ln368_fu_623_p2) begin
    for (ap_tvar_int_1 = 8 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 7 - 0) begin
            tmp_fu_629_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_fu_629_p4[ap_tvar_int_1] = shl_ln368_fu_623_p2[7 - ap_tvar_int_1];
        end
    end
end

assign trunc_ln1026_1_fu_338_p1 = rem_fu_94[2:0];

assign trunc_ln1026_fu_334_p1 = rem_fu_94[6:0];

assign trunc_ln1030_fu_368_p1 = rem_fu_94[6:0];

assign trunc_ln368_1_fu_388_p1 = add_ln1030_fu_354_p2[2:0];

assign trunc_ln368_fu_384_p1 = rem_fu_94[2:0];

assign trunc_ln628_1_fu_313_p1 = sub_ln1033_fu_291_p2[6:0];

assign trunc_ln628_2_fu_673_p1 = sext_ln1033[2:0];

assign trunc_ln628_fu_309_p1 = sub_ln1033_1_fu_297_p2[6:0];

assign xf_bits_per_clock_fu_220_p3 = ((bLast_width_fu_215_p2[0:0] == 1'b1) ? last_blk_width_load : 4'd8);

assign xor_ln368_1_fu_408_p2 = (select_ln368_fu_392_p3 ^ 3'd7);

assign xor_ln368_2_fu_646_p2 = (8'd255 ^ and_ln368_reg_849);

assign xor_ln368_fu_608_p2 = (trunc_ln368_reg_843 ^ 3'd7);

assign xor_ln628_1_fu_468_p2 = (trunc_ln628_reg_802 ^ 7'd127);

assign xor_ln628_2_fu_497_p2 = (select_ln628_fu_477_p3 ^ 7'd127);

assign xor_ln628_3_fu_676_p2 = (trunc_ln628_2_fu_673_p1 ^ 3'd7);

assign xor_ln628_fu_583_p2 = (sub_ln628_1_reg_832 ^ 7'd127);

assign zext_ln1013_fu_200_p1 = i_fu_98;

assign zext_ln1019_1_fu_262_p1 = xf_bits_per_clock_reg_781;

assign zext_ln1019_fu_259_p1 = xf_bits_per_clock_reg_781;

assign zext_ln1020_fu_271_p1 = ptr_width_minus_fu_265_p3;

assign zext_ln1033_fu_287_p1 = select_ln1033_fu_281_p3;

assign zext_ln368_1_fu_619_p1 = select_ln368_2_fu_613_p3;

assign zext_ln368_2_fu_414_p1 = select_ln368_1_fu_400_p3;

assign zext_ln368_3_fu_418_p1 = xor_ln368_1_fu_408_p2;

assign zext_ln368_fu_561_p1 = sub_ln368_reg_827;

assign zext_ln628_1_fu_536_p1 = sub_ln628_reg_821;

assign zext_ln628_2_fu_588_p1 = xor_ln628_fu_583_p2;

assign zext_ln628_3_fu_503_p1 = select_ln628_2_fu_491_p3;

assign zext_ln628_4_fu_507_p1 = xor_ln628_2_fu_497_p2;

assign zext_ln628_5_fu_682_p1 = xor_ln628_3_fu_676_p2;

assign zext_ln628_fu_533_p1 = sub_ln628_reg_821;

endmodule //histoframe_accel_AxiStream2MatStream_2_Pipeline_MMIterInLoopRow
